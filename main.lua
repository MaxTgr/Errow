local sheetFile = require( "sheet" )----Loading physics and setting the gravity to 0local physics = require( "physics" )physics.start()physics.setGravity( 0, 0 )----hiding the notification bardisplay.setStatusBar(display.HiddenStatusBar)----Groupslocal backGroup = display.newGroup()local itemGroup = display.newGroup()local playerGroup = display.newGroup()local uiGroup = display.newGroup() ----getting the center of the screenlocal centerX = display.contentCenterXlocal centerY = display.contentCenterYlocal displayW = display.contentWidthlocal displayH = display.contentHeightlocal mapMarginY = centerY + 35local onAnim = truelocal arrowTable = {}----loading the background maplocal map = display.newImage(backGroup, "Sprites/map.png", centerX, mapMarginY)local mapClosed = display.newImage(backGroup, "Sprites/mapd.png", centerX, mapMarginY)local mapOpened = display.newImage(backGroup, "Sprites/mapdo.png", centerX, mapMarginY)local doors = display.newImage(backGroup, "Sprites/doors.png", centerX, mapMarginY)map.alpha = 1mapClosed.alpha = 0mapOpened.alpha = 1doors.alpha = 0----loading sheet--playerlocal sheet = graphics.newImageSheet( "Sprites/sheet test.png", options )local playerMarginY = displayH - 80local playerM = display.newImage(playerGroup, sheet, 1 , centerX, playerMarginY)local playerL = display.newImage(playerGroup, sheet, 2 , centerX, playerMarginY)local playerR = display.newImage(playerGroup, sheet, 3 , centerX, playerMarginY)playerM.alpha = 0playerL.alpha = 0playerR.alpha = 0--shieldlocal sheetShield = graphics.newImageSheet( "Sprites/shield.png", optionsShield )local shieldMMarginY = playerM.y - playerM.contentHeight / 2local shieldM = display.newImage(itemGroup, sheetShield, 1 , centerX, shieldMMarginY)local shieldL = display.newImage(itemGroup, sheetShield, 2 , centerX - 22, playerM.y)local shieldR = display.newImage(itemGroup, sheetShield, 2 , centerX + 25, playerM.y)shieldM.alpha = 0shieldL.alpha = 0shieldR.alpha = 0----CONTROLS---------------------local rRect = display.newRect(centerX + 80, centerY, 50, 50)local lRect = display.newRect(centerX - 80, centerY, 50, 50)local mRect = display.newRect(centerX, centerY, 50, 50)local paddingRect = mRect.contentWidthrRect.x = displayW - rRect.contentWidth/2 - paddingRectrRect.y = displayH - rRect.contentHeightrRect.alpha = 0.1lRect.x = displayW - lRect.contentWidth * 2.5 - paddingRectlRect.y = displayH - lRect.contentHeightlRect.alpha = 0.1mRect.x = displayW - mRect.contentWidth * 1.5 - paddingRectmRect.y = displayH - mRect.contentHeight * 2mRect.alpha = 0.1rRect.id = 1lRect.id = 2mRect.id = 0local triangleShape = { 0,-15, 20,15, -20,15 }local triangle = display.newPolygon(mRect.x, mRect.y, triangleShape )local triangler = display.newPolygon(rRect.x, rRect.y, triangleShape )local trianglel = display.newPolygon(lRect.x, lRect.y, triangleShape )triangler.rotation = 90trianglel.rotation = -90local function alphaChanger (p1, p2, p3, s1, s2, s3)	playerM.alpha = p1	playerL.alpha = p2	playerR.alpha = p3	shieldM.alpha = s1	shieldL.alpha = s2	shieldR.alpha = s3endlocal function tapListener (event)	if (onAnim == false) then		if (event.target.id == 1) then					alphaChanger(0,0,1,0,0,1)				elseif (event.target.id == 2) then						alphaChanger(0,1,0,0,1,0)				else						alphaChanger(1,0,0,1,0,0)		end	end	return trueendrRect:addEventListener( "tap", tapListener )lRect:addEventListener( "tap", tapListener )mRect:addEventListener( "tap", tapListener )-------------------------------------UI-----------------------------placeholder variablelocal level = 1--rectangle in the toplocal topRect = display.newRect(centerX, 0, displayW, 0)local paint = { 0.62, 0.62, 0.62 }topRect.alpha = 0.65topRect.fill = paint--Score hud elementlocal hudScore = display.newText("Level: " .. level, 0, 0, "Fonts/SourceCodePro-Regular.ttf")hudScore.x = hudScore.contentWidthhudScore.y = hudScore.contentHeighthudScore:setFillColor( 0, 0, 0 )--setting the rectangle the correct sizetopRect.height = hudScore.contentHeight * 2topRect.y = topRect.contentHeight/2-------------------------------local function Start()	mapOpened.alpha = 0	transition.to( mapOpened , {time = 400, alpha = 0} )	transition.to( shieldM , {time = 200, alpha = 1} )	transition.to( mapClosed, { time = 400, alpha = 1} )	transition.to( doors, {time = 400, alpha = 1} )	onAnim = falseendlocal function Awake()	onAnim = true	playerM.y = displayH + playerM.contentHeight	playerM.alpha = 1	local backgroundMusic = audio.loadStream("Sounds/Main.ogg")	audio.setVolume(0 , { channel=1 }) 	audio.play( backgroundMusic )	transition.to( playerM, { time = 2000, y = playerMarginY, onComplete = Start} )	audio.fade( { channel=1, time=2000, volume=1 } )endAwake()